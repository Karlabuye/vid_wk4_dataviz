---
title: "Visualize Data"
author: "Karla Buitrago-Yepes"
format: gfm
---


```{r}
#| label: setup
#| include: false
library(tidyverse)
#gfm is a markdown doc visible on git hub 
```



## Your Turn 0

Add a setup chunk that loads the tidyverse packages.


```{r}
#|label: Read in Data
mpg #built in data set
```


## Your Turn 1

Run the code on the slide to make a graph. Pay strict attention to spelling, capitalization, and parentheses!

```{r}
#|label: plot1
#initialize with data then add mapping/aesthetics 
ggplot(data = mpg)+
  geom_point(aes (x= displ, y = hwy))

```


## Your Turn 2

Replace this scatterplot with one that draws boxplots. Use the cheatsheet. Try your best guess.

```{r}
#| label: changing geometries
ggplot(data = mpg) +
  geom_boxplot(mapping = aes(x = class, y = hwy))
```


## Your Turn 3

Make a histogram of the `hwy` variable from `mpg`. Hint: do not supply a y variable.

```{r}
#|label: Histogram
ggplot(mpg) +
  geom_histogram(aes(x = hwy))
```

## Your Turn 4

Use the help page for `geom_histogram` to make the bins 2 units wide.

```{r}
#|llabel: Modifying aesthetics
ggplot(mpg) +
  geom_histogram(aes(x = hwy),binwidth= 2)
```


## Your Turn 5

Add `color`, `size`, `alpha`, and `shape` aesthetics to your graph. Experiment.  

```{r}
#|label: Good Visual, Scatterplot
ggplot(data = mpg) +
  geom_point(mapping = aes(x = displ, y = hwy,color= class), alpha= 0.5 )+
  labs(title= "The Bigger the engine the less mileage gotten on the highway", color= "Class of Vehicle", y = "Highway Mileage", x= "Size of Engine")+
  theme_light()
```

## Help Me

What do `facet_grid()` and `facet_wrap()` do? 
(run the code, interpret, convince your group)

```{r}
#|label: Faceting
# Makes a plot that the commands below will modify
q <- ggplot(mpg) + geom_point(aes(x = displ, y = hwy))

q + facet_grid(. ~ cyl)#multiple columns 
q + facet_grid(drv ~ .)#multiple rows 
q + facet_grid(drv ~ cyl)# mult columns and rows 
q + facet_wrap(~ class)#mult columns and rows 
```


## Your Turn 6

Make a bar chart `class` colored by `class`. Use the help page for `geom_bar` to choose a "color" aesthetic for class.

```{r}
#|label: Bar plot
ggplot(mpg) +
  geom_bar(aes(x = class, fill = class))+
  guides(fill= "none")+ #rid of legend
  labs(x= "Class of Vehicle", 
       y= "Number of Vehicles in Sample")+
  theme_bw()
  
```

## Quiz

What will this code do?

> Two graphs on one plot overlaying the smooth trend line over a scatterplot. The graph is saved in out project/ directory with ggsave. 

```{r}
#|label: overlayed scatter plot
ggplot(mpg, aes(displ, hwy)) + #make universal aesthetics so will not have to go through and put in each geom
  geom_point(aes(color = class)) +
  geom_smooth(color= "black",
              se=FALSE,
              method = "lm")+ 
  scale_colour_viridis_d()

  ggsave("example.jpg", width = 6, height = 4)
```


***

# Take aways

You can use this code template to make thousands of graphs with **ggplot2**.

```{r eval = FALSE}
ggplot(data = <DATA>) +
  <GEOM_FUNCTION>(mapping = aes(<MAPPINGS>))
```